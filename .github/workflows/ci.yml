on:
  push:
    branches: [newDev, feature/ci-cd]

name: Spring Project CI on ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - run: mkdir -p ./src/main/resources
      - run: touch ./src/main/resources/application.yml
      - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
      - run: cat ./src/main/resources/application.yml

      - run: touch ./src/main/resources/application-aws.yml
      - run: echo "${{ secrets.APPLICATION_AWS }}" > ./src/main/resources/application-aws.yml
      - run: cat ./src/main/resources/application-aws.yml

      - run: touch ./src/main/resources/application-ouath.yml
      - run: echo "${{ secrets.APPLICATION_OUATH }}" > ./src/main/resources/application-ouath.yml
      - run: cat ./src/main/resources/application-ouath.yml

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t close-up-backend-ecr ${{ github.sha }} .
          docker tag close-up-backend-ecr:latest 669260550663.dkr.ecr.ap-northeast-2.amazonaws.com/close-up-backend-ecr:${{ github.sha }}
          docker push 669260550663.dkr.ecr.ap-northeast-2.amazonaws.com/close-up-backend-ecr:${{ github.sha }}
