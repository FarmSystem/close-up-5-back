on:
  push:
    branches: [newDev, feature/ci-cd]

env: # 새로 추가한 부분
  S3_BUCKET_NAME: close-up-cicd-bucket
  PROJECT_NAME: closeUp

name: Spring Project CI/CD

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make .yml

        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
          cat ./src/main/resources/application.yml

          touch ./src/main/resources/application-aws.yml
          echo "${{ secrets.APPLICATION_AWS }}" > ./src/main/resources/application-aws.yml
          cat ./src/main/resources/application-aws.yml

          touch ./src/main/resources/application-oauth.yml
          echo "${{ secrets.APPLICATION_OAUTH }}" > ./src/main/resources/application-oauth.yml
          cat ./src/main/resources/application-oauth.yml

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash

      # 수정
      - name: Make zip file
        run: |
          mkdir deploy
          cp ./appspec.yml ./deploy/
          cp ./Dockerfile ./deploy/
          cp ./scripts/*.sh ./deploy/
          cp ./build/libs/*.jar ./deploy/
          zip -r -qq -j ./$GITHUB_SHA.zip ./deploy

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ env.S3_BUCKET_NAME }}

      - name: Code Deploy
        run: aws deploy create-deployment --application-name close-up-deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name close-up-deploy-group --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
